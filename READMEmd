First, I tried to fetch data from the REST Countries API using the help resources we had, but it wasn’t working the API wouldn’t return any data. After reading through the documentation and checking the issue in the same file, I realized that I needed to specify the fields parameter in the URL for the request to work properly. Once I fixed that, I was able to fetch the data successfully.
Next, I created the initial page content and built the first country card in my index.html, styling it before making it dynamic. I used display: flex to lay out the cards neatly across the page and ensured the design was responsive and clean.
In my country.js file, I created the page that shows specific country details. I styled it to match the main layout and used URLSearchParams to extract the country name from the query string. I then fetched the full data for that country using fullText=true and displayed key information like the flag, name, population, region, subregion, capital, native name, currencies, and languages. I made sure to handle optional fields carefully so the layout wouldn’t break if any data was missing.
For the main functionality, I used .then() to handle the asynchronous fetch calls and update the DOM with the country data. I also included .catch() blocks to handle errors gracefully and show fallback messages when something went wrong.

When I had trouble getting the search input and Enter key to work, I resolved it by adding event listeners for both keydown and click. I used trim() to clean the input and redirected the user to the detail page using window.location.href, passing the country name as a query parameter. I also fixed a bug where the input’s id had a space, which was preventing the JavaScript from targeting it correctly.
I also implemented a theme toggling feature to switch between light and dark modes. I added a toggle button and used JavaScript to apply a dark-theme class to the body element. I made sure the styles updated dynamically across all components, including cards, buttons, and text. To preserve the user’s preference, I still need to add localstorage and deploy my app
